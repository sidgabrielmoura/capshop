// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  accounts Account[]
  sessions Session[]

  products     Product[] // seus produtos
  subscription Subscription?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id               String             @id @default(uuid())
  name             String
  description      String
  user             User               @relation(fields: [userId], references: [id])
  userId           String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  images           Image[]
  generatedContent GeneratedContent[]
}

model Image {
  id        String  @id @default(uuid())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Plan {
  id            String         @id @default(uuid())
  name          String         @unique // ex: "Free", "Pro"
  priceCents    Int
  features      String[] // Lista de recursos do plano
  subscriptions Subscription[]
}

model Subscription {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique
  plan      Plan      @relation(fields: [planId], references: [id])
  planId    String
  isActive  Boolean   @default(true)
  startedAt DateTime  @default(now())
  endsAt    DateTime?
}

model GeneratedContent {
  id        String   @id @default(uuid())
  type      String // "title" ou "description"
  content   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
}
